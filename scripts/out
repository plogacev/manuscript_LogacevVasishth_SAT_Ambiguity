running
  '/usr/lib/R/bin/R --slave --no-restore --file=./models_fit.R'

Loading required package: ggplot2
Loading required package: StanHeaders
rstan (Version 2.10.1, packaged: 2016-06-24 13:22:16 UTC, GitRev: 85f7a56811da)
For execution on a local, multicore CPU with excess RAM we recommend calling
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())

Attaching package: 'dplyr'

The following objects are masked from 'package:plyr':

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union


Attaching package: 'tidyr'

The following object is masked from 'package:rstan':

    extract


Attaching package: 'magrittr'

The following object is masked from 'package:tidyr':

    extract

The following object is masked from 'package:rstan':

    extract

Loading required package: methods
Loading 'brms' package (version 0.10.0). Useful instructions 
can be found by typing help('brms'). A more detailed introduction 
to the package is available through vignette('brms').
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> ### Set path for saving models
> models_path <- "models"
> samples_path <- "samples"
> 
> ###########################
> ### Estimation function ###
> ###########################
> 
> estimate <- function(base_fname, iter, ...) {
+   base_fname_models <- base_fname %>% file.path(models_path, .)
+   fname_model_code <- base_fname_models %>% paste0(., "_model_code.stan")
+   fname_params <- base_fname_models %>% paste0(., "_params.rda")
+   
+   base_fname_samples <- base_fname %>% file.path(samples_path, .)
+   fname_samples <- base_fname_samples %>% paste0(., sprintf("_iter%d.rda", iter))
+ 
+   (load(fname_params))
+   
+   # re-compile the model if it has been changed
+   if ( file.info(fname_params)$atime < file.info(fname_model_code)$atime ) {
+       model <- rstan::stan_model(file = fname_model_code)
+       brmsfit$fit@stanmodel <- model
+       brmsfit$model <- model@model_code
+   }
+   
+   brmsfit_samples <- brm(formula = params$formula,
+                          nonlinear = params$nonlinear,
+                          prior = params$prior,
+                          data = params$data,
+                          family = params$family,
+                          fit = brmsfit,
+                          iter = iter,
+                          ...)
+ 
+   save(brmsfit_samples, file = fname_samples)
+ }
> 
> #########################################################################################
> ### Generate multi-level model with condition contrasts and by-subject random effects ###
> #########################################################################################
> cat("Running rc_exp_mlm_subj: test\n")
Running rc_exp_mlm_subj: test
> estimate(base_fname = "rc_exp_mlm_subj", iter = 30, chains = 1, cores = 1) 

SAMPLING FOR MODEL 'rc_exp_mlm_subj_model_code' NOW (CHAIN 1).
WARNING: No variance estimation is
         performed for num_warmup < 20


Chain 1, Iteration:  1 / 30 [  3%]  (Warmup)
Chain 1, Iteration:  3 / 30 [ 10%]  (Warmup)
Chain 1, Iteration:  6 / 30 [ 20%]  (Warmup)
Chain 1, Iteration:  9 / 30 [ 30%]  (Warmup)
Chain 1, Iteration: 12 / 30 [ 40%]  (Warmup)
Chain 1, Iteration: 15 / 30 [ 50%]  (Warmup)
Chain 1, Iteration: 16 / 30 [ 53%]  (Sampling)
Chain 1, Iteration: 18 / 30 [ 60%]  (Sampling)
Chain 1, Iteration: 21 / 30 [ 70%]  (Sampling)
Chain 1, Iteration: 24 / 30 [ 80%]  (Sampling)
Chain 1, Iteration: 27 / 30 [ 90%]  (Sampling)
Chain 1, Iteration: 30 / 30 [100%]  (Sampling)
 Elapsed Time: 18.1176 seconds (Warm-up)
               5.12623 seconds (Sampling)
               23.2439 seconds (Total)

> cat("Running rc_exp_mlm_subj: real\n")
Running rc_exp_mlm_subj: real
> estimate(base_fname = "rc_exp_mlm_subj", iter = 3000, warmup = 1000, chains = n_cores, cores = n_cores) 
starting worker pid=8657 on localhost:11765 at 00:54:49.665
starting worker pid=8669 on localhost:11765 at 00:54:49.835
starting worker pid=8681 on localhost:11765 at 00:54:50.005
starting worker pid=8693 on localhost:11765 at 00:54:50.174

SAMPLING FOR MODEL 'rc_exp_mlm_subj_model_code' NOW (CHAIN 1).

SAMPLING FOR MODEL 'rc_exp_mlm_subj_model_code' NOW (CHAIN 2).

Chain 1, Iteration:    1 / 3000 [  0%]  (Warmup)
SAMPLING FOR MODEL 'rc_exp_mlm_subj_model_code' NOW (CHAIN 3).

Chain 2, Iteration:    1 / 3000 [  0%]  (Warmup)
SAMPLING FOR MODEL 'rc_exp_mlm_subj_model_code' NOW (CHAIN 4).

Chain 3, Iteration:    1 / 3000 [  0%]  (Warmup)
Chain 4, Iteration:    1 / 3000 [  0%]  (Warmup)
Chain 1, Iteration:  300 / 3000 [ 10%]  (Warmup)
Chain 2, Iteration:  300 / 3000 [ 10%]  (Warmup)
Chain 3, Iteration:  300 / 3000 [ 10%]  (Warmup)
Chain 4, Iteration:  300 / 3000 [ 10%]  (Warmup)
Chain 1, Iteration:  600 / 3000 [ 20%]  (Warmup)
Chain 4, Iteration:  600 / 3000 [ 20%]  (Warmup)
Chain 2, Iteration:  600 / 3000 [ 20%]  (Warmup)
Chain 3, Iteration:  600 / 3000 [ 20%]  (Warmup)
Chain 1, Iteration:  900 / 3000 [ 30%]  (Warmup)
Chain 4, Iteration:  900 / 3000 [ 30%]  (Warmup)
Chain 2, Iteration:  900 / 3000 [ 30%]  (Warmup)
Chain 3, Iteration:  900 / 3000 [ 30%]  (Warmup)
Chain 1, Iteration: 1001 / 3000 [ 33%]  (Sampling)
Chain 4, Iteration: 1001 / 3000 [ 33%]  (Sampling)
Chain 2, Iteration: 1001 / 3000 [ 33%]  (Sampling)
Chain 3, Iteration: 1001 / 3000 [ 33%]  (Sampling)
Chain 4, Iteration: 1300 / 3000 [ 43%]  (Sampling)
Chain 1, Iteration: 1300 / 3000 [ 43%]  (Sampling)
Chain 3, Iteration: 1300 / 3000 [ 43%]  (Sampling)
Chain 2, Iteration: 1300 / 3000 [ 43%]  (Sampling)
Chain 4, Iteration: 1600 / 3000 [ 53%]  (Sampling)
Chain 1, Iteration: 1600 / 3000 [ 53%]  (Sampling)
Chain 3, Iteration: 1600 / 3000 [ 53%]  (Sampling)
Chain 2, Iteration: 1600 / 3000 [ 53%]  (Sampling)
Chain 4, Iteration: 1900 / 3000 [ 63%]  (Sampling)
Chain 1, Iteration: 1900 / 3000 [ 63%]  (Sampling)
Chain 3, Iteration: 1900 / 3000 [ 63%]  (Sampling)
Chain 4, Iteration: 2200 / 3000 [ 73%]  (Sampling)
Chain 2, Iteration: 1900 / 3000 [ 63%]  (Sampling)
Chain 3, Iteration: 2200 / 3000 [ 73%]  (Sampling)
Chain 4, Iteration: 2500 / 3000 [ 83%]  (Sampling)
Chain 1, Iteration: 2200 / 3000 [ 73%]  (Sampling)
Chain 2, Iteration: 2200 / 3000 [ 73%]  (Sampling)
Chain 4, Iteration: 2800 / 3000 [ 93%]  (Sampling)
Chain 3, Iteration: 2500 / 3000 [ 83%]  (Sampling)
Chain 1, Iteration: 2500 / 3000 [ 83%]  (Sampling)
Chain 2, Iteration: 2500 / 3000 [ 83%]  (Sampling)
Chain 4, Iteration: 3000 / 3000 [100%]  (Sampling)
 Elapsed Time: 108335 seconds (Warm-up)
               255090 seconds (Sampling)
               363425 seconds (Total)


Chain 3, Iteration: 2800 / 3000 [ 93%]  (Sampling)
Chain 1, Iteration: 2800 / 3000 [ 93%]  (Sampling)